// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(cuid())
  // email String @unique
  username       String @unique
  // emailVerified Boolean @default(false)
  hashedPassword String

  roles      String[]
  properties Property[]
}

enum PropertyStatus {
  ACTIVE
  INACTIVE
}

model Property {
  id         String         @id @default(cuid())
  name       String
  status     PropertyStatus
  uniqueCode String?        @unique
  mediaList  File[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  typeId String
  type   PropertyType @relation(fields: [typeId], references: [id])

  amenities PropertyAmenitiy[]

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model PropertyType {
  id          String     @id @default(cuid())
  name        String     @unique
  description String?
  Property    Property[]
}

model PropertyAmenitiy {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  properties Property[]
}

model File {
  id       String     @id @default(cuid())
  name     String
  path     String
  mimetype String
  size     BigInt
  Property Property[]
}

model Contact {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
